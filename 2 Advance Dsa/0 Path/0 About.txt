üìú Java History
Invented in 1995 by James Gosling and his team (also known as the Green Team) at Sun Microsystems.

Later, Java became open source and is now maintained by Oracle Corporation.

‚òï Why the Name "Java"?
The name "Java" was inspired by Java coffee. The developers were drinking coffee from Java Island while brainstorming names.

üÜï Java Version
Java version: 23.0.1

Release Date: October 15, 2024

üîé What You Can Do with Java 23.0.1:
Use modern features like pattern matching, records, sealed classes, etc.

Write and compile code using javac

Build apps using JavaFX, Spring Boot

Work with advanced JDK tools and APIs

üì± Uses of Java:
Android app development

Enterprise applications (Spring Framework)

Web development (Servlets, JSP)

Desktop apps (JavaFX, Swing)

Cloud & Big Data (e.g., Hadoop is written in Java)

‚öôÔ∏è How Java Works
pgsql
Copy
Edit
+----------------+        +----------------------+       +------------------------+       +---------------------+
| 1. Write Code  | --->   | 2. Compile (.java)   | --->  | 3. Bytecode (.class)   | ---> | 4. JVM Executes     |
| (Hello.java)   |        | using javac          |       | platform-independent   |       | using java command  |
+----------------+        +----------------------+       +------------------------+       +---------------------+
        |                          |                                |                                 |
        v                          v                                v                                 v
   Human-readable           Converts code                JVM interprets or JIT compiles      Runs on any platform
   Java source file        into bytecode                bytecode into machine code          with compatible JVM
üåç How Java is Platform-Independent
pgsql
Copy
Edit
     [Your Java Code: Hello.java]
                      |
                      v
         [JDK (Java Development Kit)]
        - Contains: Compiler (javac)
                      |
                      v
      Compiles .java to .class (bytecode)
                      |
                      v
        [Bytecode (.class file)]
                      |
         -----------------------
         |                     |
      (Windows)             (Linux)
         |                     |
         v                     v
 [JVM - Java Virtual Machine] [JVM]
         |                     |
     Converts bytecode     Converts bytecode
     to machine code       to machine code
         |                     |
         v                     v
   Runs the program      Runs the program

   ‚úÖ SAME `.class` file runs on any OS  
   ‚úÖ That's why **Java is Platform-Independent**
üîß Java Components
Component	Full Form	Role
JDK	Java Development Kit	For developers. Includes JRE, javac (compiler), debugger, etc.
JRE	Java Runtime Environment	Includes JVM + libraries to run Java programs (not for compiling).
JVM	Java Virtual Machine	Core engine that executes bytecode (.class files) on any OS.

üß† Categories of Programming Languages
üîÅ From Source Code to Execution:
pgsql
Copy
Edit
+--------------------+       +---------------------+       +----------------------+       
|  Source Code       | --->  |    Compiler         | --->  |   Assembly Code      |       
|  (e.g., C, Java)   |       |  (High-level to ASM)|       |  (Low-level, human-  |       
+--------------------+       +---------------------+       |   readable code)     |       
                                                          +----------------------+       
                                                                  |
                                                                  v
                                                      +----------------------+       
                                                      |     Assembler        |       
                                                      | (ASM to Machine Code)|       
                                                      +----------------------+       
                                                                  |
                                                                  v
                                                      +----------------------+       
                                                      |  Machine Language    |       
                                                      |  (Binary 0s and 1s)  |       
                                                      +----------------------+       
                                                                  |
                                                                  v
                                                      +----------------------+       
                                                      |   CPU Executes Code  |       
                                                      +----------------------+       
üñ•Ô∏è Platform = OS + Processor
Java works across platforms because the JVM abstracts the OS and processor, allowing the same .class file to run anywhere a
 compatible JVM exists.



 **Basic feature of java **
Simple
Object-Oriented
Platform Independent
Robust
Secure
Multithreaded
Portable
High Performance
Distributed
Dynamic




** how java is platfrom independent**
Java Source Code (.java)
          |
          v
     Java Compiler
          |
          v
   Bytecode (.class)  <-- Platform Independent Code
          |
          v
      JVM (Platform-Specific)
          |
          v
  Converts Bytecode into
  Machine Code for that OS
          |
          v
  Java Program Runs on Any Platform

NOTE - jvm is platfrom dependent 



***********************************************************************888888
Use of main Method in Java
The main method is the entry point of any Java program.

It‚Äôs where the Java Virtual Machine (JVM) starts execution.

Without a main method, the program won‚Äôt run.

Its standard signature is:

java
Copy
Edit
public static void main(String[] args)
This means:

public: accessible by JVM anywhere.

static: can be called without creating an object.

void: doesn‚Äôt return any value.

String[] args: accepts command-line arguments as an array of strings.

**********************************************************************************************888
| Feature               | Static Programming Language                 | Dynamic Programming Language                 |
| --------------------- | ------------------------------------------- | -------------------------------------------- |
| **Type Checking**     | Done at **compile-time**                    | Done at **run-time**                         |
| **Example Languages** | Java, C, C++, C#                            | Python, JavaScript, Ruby                     |
| **Error Detection**   | Errors caught early during compilation      | Errors may appear only during execution      |
| **Performance**       | Generally faster due to early optimizations | Slightly slower because of run-time checks   |
| **Flexibility**       | Less flexible; types are fixed              | More flexible; types can change dynamically  |
| **Code Maintenance**  | Easier to maintain and refactor             | Can be harder due to dynamic types           |
| **Variable Types**    | Variables have explicit types               | Variables can hold any type                  |
| **Compilation**       | Requires compilation before running         | Usually interpreted or Just-In-Time compiled |


*********************************************************************************************************************************

Primitive Data Types
Basic data types built into the language.

Store simple values directly.

8 types in Java:

byte (8-bit integer)

short (16-bit integer)

int (32-bit integer)

long (64-bit integer)

float (32-bit floating point)

double (64-bit floating point)

char (16-bit Unicode character)

boolean (true or false)

Non-Primitive Data Types
Also called Reference Types.

Store references (addresses) to objects, not the actual data.

Include:

Classes (e.g., String, Scanner)

Arrays

Interfaces

Objects created from classes

Can have methods and fields.



************************************************************************************************************
JDK stands for Java Development Kit.

It is a software development kit used to write, compile, and run Java programs.


************************************************************************************************88888888888888
üåë What is Eclipse?
Eclipse is a free, open-source Integrated Development Environment (IDE) used mainly for Java development.

üîß Key Features of Eclipse:
Code Editor with syntax highlighting

Compiler and Debugger

Project Management Tools

Auto-completion and error checking

Plugin Support (e.g., Android, Python, C/C++)

GUI Design Tools for JavaFX or Swing

‚úÖ Why Use Eclipse?
Makes writing and managing Java code easier and faster

Helps with debugging and error tracking

Supports multiple languages via plugins

Widely used in schools, companies, and open-source projects

